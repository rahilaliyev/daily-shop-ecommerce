{"version":3,"sources":["components/LoginRegister/Register.js"],"names":["Register","className","initialValues","lat","long","city","street","number","zipcode","email","username","password","firstname","lastname","phone","validationSchema","Yup","required","onSubmit","values","axios","post","name","adress","geolocation","then","res","console","log","data","catch","err","errors","handleChange","touched","htmlFor","type","id","value","onChange"],"mappings":"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","file":"static/js/5.cd4505ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport \"./Register.scss\";\r\n\r\nconst Register = () => {\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"register-container container\">\r\n        <Formik\r\n          initialValues={{\r\n            lat: \"\",\r\n            long: \"\",\r\n            city: \"\",\r\n            street: \"\",\r\n            number: \"\",\r\n            zipcode: \"\",\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            phone: \"\",\r\n          }}\r\n          validationSchema={Yup.object({\r\n            username: Yup.string().required(\"Username can not be empty\"),\r\n            password: Yup.string().required(\"Password can not be empty\"),\r\n            email: Yup.string().required(\"Email can not be empty\"),\r\n            firstname: Yup.string().required(\"First name can not be empty\"),\r\n            // lastname: Yup.string().required(\"Last name can not be empty\"),\r\n            phone: Yup.number().required(\"Please add your phone number\"),\r\n          })}\r\n          onSubmit={(values) => {\r\n            axios\r\n              .post(\"https://fakestoreapi.com/users\", {\r\n                email: values.email,\r\n                username: values.username,\r\n                name: {\r\n                  firstname: values.firstname,\r\n                  lastname: values.lastname,\r\n                },\r\n                adress: {\r\n                  city: values.city,\r\n                  street: values.street,\r\n                  number: values.number,\r\n                  zipcode: values.zipcode,\r\n                  geolocation: {\r\n                    lat: values.lat,\r\n                    long: values.long,\r\n                  },\r\n                },\r\n                phone: values.phone,\r\n              })\r\n              .then((res) => console.log(res.data))\r\n              .catch((err) => console.log(err));\r\n          }}\r\n        >\r\n          {({ values, errors, handleChange, touched }) => (\r\n            <Form>\r\n              <span> * -required</span>\r\n              <div className=\"inputAllcards\">\r\n                <div className=\"input-rows\">\r\n                  <div className=\"input-cards\">\r\n                    <h3>Name *</h3>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"firstname\">First name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"firstname\"\r\n                        value={values.firstname}\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.firstname && touched.firstname ? (\r\n                        <div className=\"input-errors\">{errors.firstname}</div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"lastname\">Last name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"last\"\r\n                        value={values.lastname}\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.lastname && touched.lastname ? (\r\n                        <div className=\"input-errors\">{errors.lastname}</div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"input-cards\">\r\n                    <h3>Account information *</h3>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.email && touched.email ? (\r\n                        <div className=\"input-errors\">{errors.email}</div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"password\">Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.password && touched.password ? (\r\n                        <div className=\"input-errors\">{errors.password}</div>\r\n                      ) : null}\r\n                    </div>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"username\">Username</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        value={values.username}\r\n                        onChange={handleChange}\r\n                      />\r\n                      {errors.username && touched.username ? (\r\n                        <div className=\"input-errors\">{errors.username}</div>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"input-rows\">\r\n                  <div className=\"input-cards\">\r\n                    <h3>Adress</h3>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"phone\">Phone number</label>\r\n                      <input\r\n                        type=\"tel\"\r\n                        id=\"phone\"\r\n                        value={values.phone}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"city\">City</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"street\">Street</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"street\"\r\n                        value={values.street}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"number\">Number</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"number\"\r\n                        value={values.number}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"zipcode\">ZIP code</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"zipcode\"\r\n                        value={values.zipcode}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"input-cards\">\r\n                    <h3>Geolocation</h3>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"lat\">Lat</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"lat\"\r\n                        value={values.lat}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </div>\r\n                    <div className=\"inputLabel\">\r\n                      <label htmlFor=\"long\">Long</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"long\"\r\n                        value={values.long}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\">Submit</button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}